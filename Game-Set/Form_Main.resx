<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAA6GQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAAAFv
        ck5UAc+id5oAABj0SURBVHja7V0LnE5V954Z425cxrjkGrlU6Eu5/UuiVCLCFCoioZQkyeXr8qXSRXwY
        KSKESn+XhCi6uJZCo1Au5U5yN8xoZsw833q9M2Nm3nP23ue8+7zX9axfv/q+35x3n7PXs/dea+21146I
        YDBUAZagEKcVXxAxiEUcyrEEjMSRRmJIM/qJkOsHy6E5+iMBi7AOW7Adv7EEjGwnjawjzSSQhpqTpvSQ
        IOdnSuEuTKQmksAIfCSRpiaSxkp5RYIc5ZdFb3yHZO7XIEMyaa03ac8eCbIeK4R4rEU692aQIp20F09a
        tEqBLPXXxFQe+SEwE0wlTVqhQJb6b8dm7r0QwWbSpioFLv1hJHrgCPdbCOEIupNW5RTIUn8/nOY+CzGc
        Jq3KKJA1+Xdn9YcoBboLF4KctZ8n/9BdCES2QJblz6ZfaJuDNU0IkOX3T+U+CnFMdccFjAkQz35/GMQF
        4g0IkBX0Xcv9EwZY6w4QexKgNwd9wwLppOm8BMja8VvFfRMmWOXeKcxLgDa8/oeRHdDGkwAJ3C9hhIT8
        BCiHRO6VMEKiK2so9/hvztk+YYUk0nj2HHCJAP25T/yPTFNxAP3zEoAtAL/jG3Q1lC7oi31OWgGXEr0X
        sQL8jSmmif6lnTDQFrmSyLMJEIN1rAB/Y6opAeKwRX9z60jrOQSIdaIFRkATYAtpPZcT+BsrQMVIyzAV
        609k+pcA2+lnmQDWsBW98JChPIYDhk/sQR+TJ3pjp38J8FtOJCAcCZBpMALlWIECJioqiV8Nn/gJxUye
        KIQ1TADf4jSN4MV4B8PJBe6F7ngET+JFTMcqGr1pSr+wEoVNVBRLv22EjUQN4yeKeey9hwgBlmEoRijL
        8xiJ8ZiFpdRV+3HeodG+H5+S0puiQvYhmVwSiRKojXhMoi5IZwJ4j2dsHGiPIpe0DGqiJZ7ADOrKC9q+
        8h+spnFeJ/+5aUOpQvPCSmHbTAAFDPGyukEUKqIdJtOo9Rbp+Br3Xz4iqyQx6EKKyWAC+I8A2TS4Bq+a
        WNZq2EGWeWlbbceRlXCECeBfArjlenysaJ7lRRrm4GqvWm5OS4c1Amw3fJOfmQDeSTE8i5MW3+AUmaHF
        vW65MmbiojIBSmE+OYJb8slWInAJJoC38gD+ttD+QXR1H4HzWmLwdj6T0JwAkTTSy9CSk1fK0G9EMgG8
        l4dxVrH1/Wirsd3q+F2RAHbmNiaABZNwpKllnhtH0UFjq4UxLl+r/iJAOWwLbwK4zqx8K235PPpobfMp
        /KNsAzhLgJKYgKVYnEs+xxpb5nHQEiAC7aVxwtGI1tjePThmwQtwlgARKEDfllsi0dTbM/z+IUAUfcpl
        ibJgrhWjMSDCt7mL40mkKP3tFahIRlq0qQP6uyU30GkCeEqjYCRAJAbR5PVZlizEPMymdXYgWpMy5J/c
        08Mtu4zjaKXUbWXQDmNIkVuxGzuxiZy3YWjsodZK+MZiIIgJoEiAjw2fSSaFvI5akk+ugT2mrY6l2UTW
        ZcXRnTo9xYA8c4k+BXL93QeWQ8FMAEUCzBY8uQ13Cz+5IM0ZxvgDdaQdVovIl2ra9kmiUKWsRerfpruC
        TABHCQDsQzPhR79g8tzL0u5qiA3SN19DhlUEuuGMjd3AKJRHZaJQXqlMHRvJBFAnALCADDTz5+83HJv7
        pXH/a2m1V8EuPI8/bW0Hl8KSS1ZFXtlN31OCCWCFAKfQRPD8TYbn1yZL1v+y+MJC8ojdhBDjzaDNWjaD
        wogAwGOC5+sb7ApknXQWLhy6jlb5azs4rAjwltAP8EwT2XS5ILbJ6n9IW/Q0kAjQMFQJ8K7g+Upk7+fH
        OEngaaLG8Lm/CFCUTNOBeCqXPInRBg5tSBBgvOD5atjrkfrRWUiAuhpSy/xPgDj8EhqbQSoEGCF4/mqP
        VK1DkgjAU1r7zF9GYMhsB8sJkE6unvnzjT3WvbWuE46CDd3FPiJAKXL4ttE4zSvb8AlnBFkjwD5hQLid
        RyxvmnA7qabmc/WiQFCswVVe5VGGM4KsEWCS0Kcf5PH3w4ULQBuNJwz8GQoOGwLsQD2hRT8z399n4CFh
        Jw/U3GdMAEcJsFeSz1fB4wBmCm4TPjGeCRBoBJhj8lQKluL/JF3WzsPzPS0MHEfhIyZAoBFgOtn5F3Ik
        GWdxGD9hMtoLrXl3UtQ0j7aOCpeMIviSCRBYBIjANWiFljnSAs1QV2Ap5w19eh7XOoirBE+U0F78mAng
        NQHsSjSmGFoNVYQEWMMECBUCdDA8GrIX1YQpYN8xAUKDALVN6uQdEoaNimC5dgIUoeUqSoNEEj3XMQHU
        pAI+N2nrGBoITU7dXsBRzMOnmmQ+jjMBVOQK6iwznLmUxWcuwVX/lglgIPWwTNDWBbQWPv1sUBFgiuA0
        Q2I4EqAwHpC8VgYeFv5CR2/Pz/kUK9EJnQ2kE3p55EGEPAGi0YxWcPkdNs9L5o+jAaTgTFwkQqaSpCHd
        4LRzBv2/ZpIZTgQojTsxw+BophFmCINIMX6+B+8CjuBnLMH7eA1P4RGa0TqTQ9sB9+J+9EA/DMM4ovlq
        7CJrJsPXLxd4BCiMqrgDr2C9hXqB600zbtzyul8Un4rd5C8Mw924GrEGtQnz7liUQGUyZnuRyfo9ToU6
        Aa7EjbghlzTCTbgd8RhEY2EZjQSrF5cdlhwKaenzm3D2YhqN8+pKlQk984qaYgTNWsmhSoBITMZZnMwl
        p+h/pwhO/cogTiFzhYO/9KHyf8VQ1FY4pipbAu+h+eNcaBJgjvbvSJB0Z1ePOh/O4DBeoiVMlwdUBO3w
        rTN3BfmXALO1f8fPksIQJUzjiDrxjTSbwU7BypGCg6pMgCykSOuCNbVQcfQQpluefDPJF6noyBZYFB40
        qVnKBMgTQpWtuj0Vy8wdIPOtEN6w6JJNt1iP2Jp0tlQlMSwJcFCYF+TOJnpS4STdRvIZ3DW5rFgqX6OC
        g+p3yQBnrJjQIQAwSmEyjRfW2juDd1Ej56+rKmcSHMXNDqvflTkwlwkgxj7pHOAuEjMafxpM739TB7fO
        57dfr9ghExTS2YqiEq7BLWTXdyaf5AGSbuS83os7cAORrrTpNTSX5WacYAKI8a5ijcCr8AjZDKuxFb/T
        jLCe3mcgGhrG6trgL2mrpyS2fxw6YAxWYAfNFOdoIk+/dFNRZtauQAo9vx8/0YIzAPWFNCiEBUwAMc6i
        vfKU6rokJg7l6aNLCs3HPtKQ9GpBLnNBGukblFfvwzSXiKII/fTHBEKLAC4Trrr2RNSRkhilKAj1hOUb
        kJYLzMlm+iMCoUYAYKbpSVz7BeOnC0feIMGexy4bXzBAULd8LxNAvi/wstZqwe6KBKLzxX1Nn7vVVv2O
        aYLEuN+ZAHIkY7CCTa0uRfG2MKeon8But7OZ856gOM4OJoAKzmOYttz94uQ2ilPKhpo+W56se6tII7PR
        3Hs5yARQwz9kT5fToP5yNB5lF0l+IIgC3GPxzrOL1J65DXOb/ks1Q5UALnwpPDWsItcLs5Gz8bPrAm6B
        5f4R/lJy31JovugvNGGHcRzA6v7AUJqG7dr+/QzK0Rkr7h7hLxVCA/TBJHyFRLLij+IkOXNJJGdxGsfJ
        99+B9fgEL+BOIZFcuxOrmABWkYEf0FPSsUaJGHdiiYVk8vnC2saXjclY1EA9NEQjmpuaoDFuxHWoS7Z9
        jJLRep/mUjeOEmCw8FNmwZdIwwY8i2slaZmXA7edSKFnLbWQIilSo0Mq4ftg2gxaiZF41URe8yjy4gsc
        xkIMxE2oaEKEYrgS7fAWNtkaZztpNDup/iK0hCCYCBCoOEufuBTvYDgeRze0J3mA/ut5TMHX2OPVFPu9
        0l6k3VT5kYJrLpgAtu2DdMOzOXaxCc0dUX8s/uuU+sObAE54HQMkR1SsSzNyRR3MC2YC6N6JWIa2Sj6B
        itTCKOfSQZkATuEcFpN9cYWX+w9NyCD9w/mXZQI45XpuRQI6kt9fxGIKeFk0JSd6uRPpX0wAXyMVe0mV
        o9ETLVAH5VGc7Pkoj4STIiiFargeHTAEH2Kzt3eAMAECD5m0LBymOWE1lmAOefTjMBZj6J8ETMN8rMCP
        +JNGfKo/Xo0JEOZgAjABmABMACYAE4AJwARgAjABmABMAAYTgMEEYDABGEwABhOAwQRgMAEYTAAGE4DB
        BGAwARhMAAYTgMEEYDABGEwABhOAwQRgMAEYTAAGE0ATMpF+6YrlNN/fpssE8Bcu4m9sxnyMxXPogXh0
        QHt0RFc8jlcwDd/gD/2FUhmBQYAUbMEkPIgGiDUt9V4MVdESg7EA+7y4ZJYRcAQ4SKO7nYWCrgVRC72w
        EMdZecFPgH14HfVsXbNcGI3xtv77M3xk31wUSEa4ECAJk1Hf65s8XsehoCPATLJrHjSRrhjl20oh/iJA
        Ipl3ei52uQGzbV3M4j9Tt7Pwe1oiOdQJkIG5uEprHd0e+q9ScQznJPVEbw91AqSRm6f/muV6WORkPU2N
        OITa4UyANFq1izpUUXeMM9cra8avkqtsQpoAmRjvkPrdN3MMtVjn3x/4UlI6MqQJsIjGqZNV9Qvh/wOe
        ADMkF02HMAF2OFhR3y0dcCzgCfAfyTeELAFS8ajD6v+X/ns1HUCfcCXAF4I7tnVIBXwVBOq/gDvDkwDJ
        Fi52D6g7dTTjBBqGJwFWWh7/0WTSFaZ/1OKFA4PCBQR2o3I4EiATT1rY7bsOfTEBC8hhWoFlmI+JeIYm
        zmoCKrQNAuPPje+lV8qEJAGOKNv/jTAbRw1ieik0dj7Cg4b3cNTD1qAJBM+TXhEZkgRYiWJK6r8X+4S/
        k44tGI7q+S56XKr1XVOwn8bpQnyA/+JNjKd/L8Bq7MIZLaHmCdI+aO3E/aD+JsBYJfXXV7wjZxueQOmc
        0M84bW/5Ny04I3AHatI0HZ0Tromk/y6OKmhGDtx0cjTTbPxyJj2VjFM0E/aV9kILGgTH6F2M5LT+/Q7f
        EKCPEgFeV/69i1iOmy8901/LeEnHJlL99dIwdRSZcN1odjij+KsryX55Dc+hJ81tt+MG1FIwhYuhDuoa
        Si36nQvBSIBUye3abimO7yzaFU9Tt/6lwUD9EY9aumO8CClzgYIqzqGlZmfXgVwBXxDgXNZoFUtZWt+t
        Euuk1+92EMNQwYYqiuFhadzxHE3neglwW3AS4BRNrvKPi8FaH1vkmfgCjb3KQVjMBFDBGcWbtd/wqfqT
        ycb3dm8yDlMEKepMgJyubqX0eXXJvvcVTpL5qCMnMQaTTC1zJkCONdxZ+QN9k5V6HN21KaUM5jIBZHha
        +RPr4xPHc3zPoJdWtVxJfgQTQIgplq5NjsdXDoZDUzFEkpNjXe4y9EeYADn4ISdyp7qytsMcDT6+ESZb
        vM5Z7crn0UwAsSPY1PLHRuNfeBEbNW/z/oAqjuQj1DToOiZALrxo85PLoRPNBUe0rf5tHUtJeY4JIMIm
        S8HW/HNBA4wgQ8v7OPg70s3YbCmJa9GavJcOaIZqKKjwRA3sYgKIXME+Xn58WdyLWTjsxTvsJaWqtFQb
        /8ZaHCVvxFWj5Cz+IEevo8J5hrG2QuBhsBeQPQdU8roDolEPw2gdtzcXjFI6dt7XYyS7kIIZUuvh1nzH
        Uv7BJAwmnyNbBinZH9XIaR5iKIPxnv6Tw748FzBKk/sVSxPzR5YLRBxQGP9F6R3Njc7PJctYaXwvfIN/
        iCLyrwvJhJDs8Os92ibDguRXTLZEgvelhSiiMFyS7iGj8Gjh0ylKBAjpo2HbyLXTtyIWQHMsUJwUk3G3
        QtefkG4ei3MbOwnfhglAWCM5HG1VitOavUeh3c2Ik/6SSm7hYMl21mEmgAzfKdri6tII30hbHS/9lTZK
        RegWCl3CkmSgMgEURqNu/7iy6Y6cG2m4T/ILkXhX6d1/Ec4kUZjDBFDBQTyuuU5AHPkF5jiMq6URx18V
        37yG7aQWJkAel+hjpUQxdamI5aatyc/jXIMN2IkdEtmJ9RIbpj8TwIpn/jJqaqRAA9NSUbOkLmBhXIFK
        ClJREhbuJkgRYwIYYCdeIdcwWhMFzPLmX3G4MsFlaScIJDEBTHAEH6KtdJJWS9b+zLCFPj4jgChazwQQ
        Bmq+o/WzuobcnHMGG1GdfUaAZkhiAthFBi0Io9EEhbwKDHmagheIFr4iQFMmgLc4jnmIR1nbKnjcI037
        vFLH65FbBeEkJoAFJ3EDhqCOrd3Deh65hEm4yWcEaMtGoD7swyTcYjmF0/OQ6Tn6FV8RoAu7gXpxmuz6
        DqRUK0pI8Oj41j4jQD8OBDnhISxCCwvLwYB8z6cShXxFgFeZAM7gGJ5T3j3omC+tIwMP+Uj9kZjFBHAK
        aXhJMae3lUcXPqeguhIo6aXEoIrJITEmgBacUjxl3MijhIu8NFNRTEYiNnkpvwjz+ZgAOYGZdJtPTlAi
        QAOPk3pLFIJLCY5/tyoBUkKbAMkYhBds1vX/UskpbOwxA2xHRelT7R2vNXpBqWZQq9CeATLwBqIRha7Y
        aePplUqGoOckegbNFA6hbXQ8vKUSkm7i20svfE2Aj3PuC6qPuZaPOUxXcgbvMwjGPKHw3NMO3zqUhk4K
        b1FH20nIACTAGlTLE7N7hMwmdVxEDyUbYKjBs58o5ByUd7hMVQYeVjr2silUCbDToFhUNbxoeBTLCCuU
        toii8KHBs3uUco9a46ijvT1AKZbwXmgS4LhpPO4qDMdm6XKwDtcppocmGo6+3kpP98ZpS2Pa2no9Sukd
        2vjylnRfEeCChP3l0RnTqHkjCzid5ohRqKoYjWtlkBLiwhdKBauj8BD2K89oQ9ANpyz0whyle5KLGM5h
        QU2ATIxR8MSjUIks+GcwBcuxHj9hA1ZhPt5EF0uZQm+ZvMNZ+m21X2iMeZIxmEqzzIhLi0oBoq061ism
        vl3pu+tvfEOAeShj8QKYEpdCq8Utp4tWJZ/fDB8p5xoVo2n4AxrhniGZJPr96bg/V3nZGyzULDhINr7a
        G1yBV7EjK66YQXPaLnr7MU4sDb4gwA+SwxQ6ZaDg+vWzpFYrhZ+q4A70x2i8j5kkk2kZehS3oKLHNK5e
        4TQVHS2RuQ3ZJI+hO26ld3FVKt8djAT400aBKLtSTeJWrrA4E6nJVRaurh7jRTtFBEdfApYAJxDvM/VH
        Sm8cuIihjrT8jGDeyYtN0lPKduybACbAmz5Tvysl/IT0ff7SXsPfJRXIYFX1hrxJTnlAkHAWoATY6LOE
        zNrYrPRGP9GUrb/1Hsph7blepL03VKB4wNkAe8hXjnJc/eXxufIbLVbYG7ReNXyZYuunld1Ro0ppPwej
        F3CWXJqyjqq/nPBwuCc+dYACbQVHQvJiqe1jcAUsfmcABYK+0l4zL7ftP8/yG32GKzW/RTQ+Vmw7Hc/a
        bmVo8O4F/IWXNVQKNDqNZ28Pb71W6ySSjMsNym0fs10vrY3uInK+3Q7ehEe0euIl8IRy5N4TB+jp4lre
        owY5aNbqFv6hmN/oGXM4EMwEcCVFrEZPV5saptxbscjWNY6532YBzQPemahVMNhWt/2JTjaOvlm9XC/g
        COBeAzfSWnatUglms3oezfGBhkvjXPgb7+BGWyUqCqAeXsBW23lEJ/EfGyW0JwQ/Adw4RB7xw+S9F7bY
        6dXRHQstbcLKcRSz0MGCMgqgKu6nZw55bRyvx0MW7i6LonccGyoEcIdmD5D/7rqvtwZNbpHC0rDl0Ah9
        qdN3204ql8XoEml03Ye65NNHmb5FeTTBY5iNnV4uPrk3iH6gHmhCtpH59xcit7UZHseH2K47aTwwDoak
        YB9WYQZeRB+0o7W9KU3KDdGYXMfbSSUDMZrG/C80ZWY6/iZpNKrXYSZeIrK1x21oQYtNC7RGFwzCGLI5
        tlrKGFLHKfxIi9pQauc2UrXr6xtd+vouZGGMwxJS/BlnPjjwTgal4jx97EmcoE5JImpc9NubpFHr5+gd
        ztPscNFnc2JKrq/3QbvBdDSMwQRgMAEYTAAGE4DBBGAwARhMAAYTgMEEYDABGEwABhOAwQRgWMF211m1
        bALEYgv3SJhhiyshKZsAMVjHPRJmWEdazyFAQSziHgkzLHLl5mYTwBf1UhmBhQSX3i8ToD/3SJihf14C
        NFc+4cgIBSSRxrMJkOUIJnKvhBESc6IAbAWEJSbmGv8R2cdPk7lfwgTJ7rJpeQlQCqu4Z8IEq9yl2yPy
        UaC3Q2evGIGFdHf55AgPApR1uGo6IzCw1l23J8KAAvFsB4TB+h9voP6I7MOoU7mHQhxT3efyI0woUFOx
        6B4jOLHZfX9GhCkBXJdnHOF+ClEcyb5MOUJIge4OHYVn+BenSbMi9edQIBL9mAIhqP5+7lIkEmRRoAcv
        BCE2+fdQUn8eW4DNwdAx/VpLJ38DCtQkl4HjAsHv90/NvjnPAnLK8sVjLQeIgxbppL347Hp8FpGrUnlv
        rOKZIAhH/irSXE6xdlvIIUEp3IWJSOSsoaBAEmlqImmslFfK9yCBK2uoOfojAYuwDluwHb+xBIxsJ42s
        I80kkIaa5y7JrAUeZTNjEIs4aoYlUCSONBKTvwizdoAlKITBUMb/ALx6TXYa2nezAAAAAElFTkSuQmCC
</value>
  </data>
</root>